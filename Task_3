import tkinter as tk
from tkinter import messagebox
import string


def analyze_password():
    """Analyze the entered password and display its strength."""
    password = password_entry.get()  # Get the password from the entry field

    # Check if the placeholder text is still present
    if password == placeholder_text:
        result_text.set("Please enter a valid password.")
        return

    # Initialize counters
    strength = 0
    lower_count = upper_count = num_count = wspace_count = special_count = 0

    # Analyze the password
    for char in password:
        if char in string.ascii_lowercase:
            lower_count += 1
        elif char in string.ascii_uppercase:
            upper_count += 1
        elif char in string.digits:
            num_count += 1
        elif char == ' ':
            wspace_count += 1
        else:
            special_count += 1

    # Calculate strength
    if lower_count >= 1:
        strength += 1
    if upper_count >= 1:
        strength += 1
    if num_count >= 1:
        strength += 1
    if wspace_count >= 1:
        strength += 1
    if special_count >= 1:
        strength += 1

    # Provide feedback based on strength
    if strength == 1:
        remarks = "Very bad Password üëé"
    elif strength == 2:
        remarks = "Not a good Password ü•≤"
    elif strength == 3:
        remarks = "Very weak Password, consider changing ‚òπÔ∏è"
    elif strength == 4:
        remarks = "It's a hard Password, but can be better üòü"
    elif strength == 5:
        remarks = "A very strong Password üëç"

    # Display the analysis results
    result_text.set(
        f"Password Analysis:\n"
        f"{lower_count} lowercase character(s)\n"
        f"{upper_count} uppercase character(s)\n"
        f"{num_count} numeric character(s)\n"
        f"{wspace_count} whitespace character(s)\n"
        f"{special_count} special character(s)\n"
        f"\nPassword strength: {strength}\n"
        f"Hint: {remarks}"
    )


def clear_input():
    """Clear the password input field and results."""
    password_entry.delete(0, tk.END)
    result_text.set("")
    set_placeholder()


def set_placeholder():
    """Set the placeholder text in the password entry field."""
    password_entry.insert(0, placeholder_text)
    password_entry.config(fg="grey")


def clear_placeholder(event):
    """Clear the placeholder text when the user clicks on the entry field."""
    if password_entry.get() == placeholder_text:
        password_entry.delete(0, tk.END)
        password_entry.config(fg="black")


# Create the main Tkinter window
root = tk.Tk()
root.title("Password Strength Checker")
root.geometry("450x550")

# Set a nice background color
bg_color = "#cfe9f3"  # Light blue
root.configure(bg=bg_color)

# Placeholder text
placeholder_text = "Enter password here"

# Add widgets to the GUI
title_label = tk.Label(
    root,
    text="Password Strength Checker",
    font=("Arial", 16, "bold"),
    bg=bg_color,
    fg="#2c3e50",
)
title_label.pack(pady=10)

password_label = tk.Label(
    root,
    text="Enter your password:",
    font=("Arial", 12),
    bg=bg_color,
    fg="#2c3e50",
)
password_label.pack(pady=5)

password_entry = tk.Entry(
    root,
    font=("Arial", 12),
    width=30,
    relief=tk.SOLID,
    bg="white",
    fg="grey",
)
password_entry.pack(pady=5)
set_placeholder()  # Set the placeholder initially

# Bind events for placeholder functionality
password_entry.bind("<FocusIn>", clear_placeholder)
password_entry.bind("<FocusOut>", lambda event: set_placeholder() if password_entry.get() == "" else None)

analyze_button = tk.Button(
    root,
    text="Analyze Password",
    font=("Arial", 12),
    bg="#4CAF50",
    fg="white",
    width=20,
    relief=tk.FLAT,
    command=analyze_password,
)
analyze_button.pack(pady=10)

clear_button = tk.Button(
    root,
    text="Clear",
    font=("Arial", 12),
    bg="#f44336",
    fg="white",
    width=10,
    relief=tk.FLAT,
    command=clear_input,
)
clear_button.pack(pady=5)

result_text = tk.StringVar()
result_label = tk.Label(
    root,
    textvariable=result_text,
    font=("Arial", 12),
    bg=bg_color,
    fg="#2c3e50",
    justify="left",
    wraplength=400,
)
result_label.pack(pady=10)

# Run the Tkinter event loop
root.mainloop()
